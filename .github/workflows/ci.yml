name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  KTFMT_VER: 0.33
  RUST_BACKTRACE: 1

jobs:

  ##########################
  # Linting and formatting #
  ##########################

  clippy:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy

      - run: make cargo.lint

  dartanalyze:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2

      - run: flutter pub get

      - run: make flutter.analyze

  dartfmt:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2

      - run: flutter pub get

      - run: make flutter.fmt check=yes

  ktfmt:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "17"

      - name: Install ktfmt
        run: wget -O ktfmt.jar https://search.maven.org/remotecontent?filepath=com/facebook/ktfmt/${{ env.KTFMT_VER }}/ktfmt-${{ env.KTFMT_VER }}-jar-with-dependencies.jar

      - name: Check ktfmt
        run: java -jar ktfmt.jar --set-exit-if-changed android/src/main/kotlin/

  rustfmt:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt

      - run: make cargo.fmt check=yes




  ############
  # Building #
  ############

  build:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    # TODO: Switch to `windows-latest` when stable Flutter stable will support
    #       MSVC 2022:
    #       https://github.com/flutter/flutter/issues/85922
    #       https://github.com/flutter/flutter/issues/96138
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: subosito/flutter-action@v1
      - run: flutter config --enable-windows-desktop

      - run: make cargo.build
      - run: make flutter.build

      - uses: actions/upload-artifact@v3
        with:
          name: build-rust
          path: windows/rust/
          retention-days: 1




  ###########
  # Testing #
  ###########

  test-rust:
    name: Test Rust crates
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - run: make cargo.test

  test-flutter:
    name: Test Flutter integration
    needs: ["build"]
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android
            os: macos
          - platform: windows
            os: windows
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2

      - run: flutter config --enable-windows-desktop
        if: ${{ matrix.platform == 'windows' }}

      - uses: actions/download-artifact@v3
        if: ${{ matrix.platform == 'windows' }}
        with:
          name: build-rust
          path: windows/rust/

      - run: make flutter.test
        if: ${{ matrix.platform != 'android' }}

      - name: Test on min Android NDK version
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ steps.ndk-version.outputs.min }}
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: make flutter.test
        if: ${{ matrix.platform == 'android' }}




  #################
  # Documentation #
  #################

  rustdoc:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - run: make cargo.doc
