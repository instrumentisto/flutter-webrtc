name: CI

on:
  push:

env:
  RUST_BACKTRACE: 1

jobs:

  clippy:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v1
        if: ${{ !contains(github.event.head_commit.message, '[fresh ci]') }}
        with:
          key: clippy

      - run: make cargo.lint

  rustfmt:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt

      - run: make cargo.fmt check=yes

  build:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
        if: ${{ !contains(github.event.head_commit.message, '[fresh ci]') }}
        with:
          key: build
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: 2.8.1
      - run: flutter config --enable-windows-desktop

      - run: make cargo.build
      - run: make flutter.build

  rustdoc:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
        if: ${{ !contains(github.event.head_commit.message, '[fresh ci]') }}
        with:
          key: rustdoc

      - run: make cargo.doc

  test:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - run: make test
